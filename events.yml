asyncapi: 2.4.0
info:
  title: ec.amqp
  version: 1.0.0
servers:
  production:
    url: cluster1.entrecode.de
    protocol: amqp
    description: This is the entrecode RabbitMQ broker.
  stage: 
    url: cluster1.cachena.entrecode.de
    protocol: amqp
    description: This is the entrecode RabbitMQ broker, staging version.
tags:
  - name: PublicAPI
    description: Events from the Data Manager Public API (Exchange `PublicAPI``)
  - name: DataManager
    description: Events from the Data Manager API (Exchange `ecAPI`)
channels:
  /{shortID}/{modelTitle}/{entryID}/{entryEventType}:
    parameters:
      shortID:
        description: Short ID of the data manager
        schema: 
          $ref: "#/components/messages/PublicAPIEntryEvent/payload/properties/shortID"
      modelTitle:
        description: Title of the model
        schema: 
          $ref: "#/components/messages/PublicAPIEntryEvent/payload/properties/modelTitle"
      entryID:
        description: ID of the entry
        schema: 
          $ref: "#/components/messages/PublicAPIEntryEvent/payload/properties/entryID"
      entryEventType:
        description: type of the entry event
        schema:
          enum:
          - entryCreated
          - entryUpdated
          - entryDeleted
    subscribe:
      operationId: entrySub
      tags:
      - name: PublicAPI
      description: a Data Manager entry was created, updated or deleted. <br>It also contains info about which content has changed on `entryUpdated` events.
      message:
        $ref: "#/components/messages/PublicAPIEntryEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: publicAPI
          type: topic
          durable: true
          vhost: /
  /{shortID}/_assets/{assetGroupID}/{assetID}/{assetEventType}:
    parameters:
      shortID:
        description: Short ID of the data manager
        schema: 
          $ref: "#/components/messages/PublicAPIEntryEvent/payload/properties/shortID"
      assetGroupID:
        description: Title of the asset Group
        schema: 
          type: string
      assetID:
        description: ID of the entry
        
      assetEventType:
        description: type of the asset event
        schema:
          enum:
          - assetCreated
          - assetUpdated
          - assetDeleted
    subscribe:
      operationId: assetSub
      tags:
      - name: PublicAPI
      description: an asset was created, updated or deleted.
      message:
        $ref: "#/components/messages/PublicAPIAssetEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: publicAPI
          type: topic
          durable: true
          vhost: /
  /{shortID}/_auth/{accountID}/loggedIn:
    parameters:
      shortID:
        description: Short ID of the data manager
        schema: 
          $ref: "#/components/messages/PublicAPIEntryEvent/payload/properties/shortID"
      accountID:
        description: Data Manager User Account ID
        schema: 
          type: string
          format: uuid
    subscribe:
      operationId: loggedInSub
      tags:
      - name: PublicAPI
      description: a DM User has logged in / got a new access token
      message:
        $ref: "#/components/messages/PublicAPIUserLoggedInEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: publicAPI
          type: topic
          durable: true
          vhost: /
  /{dataManagerID}/{dataManagerEventType}:
    parameters:
      dataManagerID:
        description: UUID of the Data Manager
        schema: 
          $ref: "#/components/messages/ecAPIDataManagerEvent/payload/properties/dataManagerID"
      dataManagerEventType:
        description: type of the dm event. *There is no event for Deletion!*
        schema:
          enum:
          - datamanagerCreated
          - datamanagerUpdated
    subscribe:
      operationId: datamanagerSub
      tags:
      - name: DataManager
      description: a data manager was created or updated.
      message:
        $ref: "#/components/messages/ecAPIDataManagerEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: ecAPI
          type: topic
          durable: true
          vhost: /
  /{dataManagerID}/{modelID}/{modelEventType}:
    parameters:
      dataManagerID:
        description: UUID of the Data Manager
        schema: 
          $ref: "#/components/messages/ecAPIModelEvent/payload/properties/dataManagerID"
      modelID:
        description: UUID of the Model
        schema: 
          $ref: "#/components/messages/ecAPIModelEvent/payload/properties/modelID"
      modelEventType:
        description: type of the model event
        schema:
          enum:
          - modelCreated
          - modelUpdated
          - modelDeleted
    subscribe:
      operationId: modelSub
      tags:
      - name: DataManager
      description: a model was created, updated or deleted.
      message:
        $ref: "#/components/messages/ecAPIModelEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: ecAPI
          type: topic
          durable: true
          vhost: /
  /{dataManagerID}/{assetGroupID}/{assetgroupEventType}:
    parameters:
      dataManagerID:
        description: UUID of the Data Manager
        schema: 
          $ref: "#/components/messages/ecAPIModelEvent/payload/properties/dataManagerID"
      assetGroupID:
        description: ID/title of the assetgroup
        schema: 
          $ref: "#/components/messages/ecAPIAssetGroupEvent/payload/properties/assetGroup/properties/assetGroupID"
      assetgroupEventType:
        description: type of the assetgroup event
        schema:
          enum:
          - assetgroupCreated
          - assetgroupUpdated
    subscribe:
      operationId: assetgroupSub
      tags:
      - name: DataManager
      description: an assetgroup was created or updated.
      message:
        $ref: "#/components/messages/ecAPIAssetGroupEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: ecAPI
          type: topic
          durable: true
          vhost: /
  /{dataManagerID}/account/{accountID}/deleted:
    parameters:
      dataManagerID:
        description: UUID of the Data Manager
        schema: 
          $ref: "#/components/messages/ecAPIAccountEvent/payload/properties/dataManagerID"
      accountID:
        description: ID/title of the assetgroup
        schema: 
          $ref: "#/components/messages/ecAPIAccountEvent/payload/properties/accountID"
    subscribe:
      operationId: accountSub
      tags:
      - name: DataManager
      description: an DM Account was deleted<br> Note that there are currently no events for created or updated DM Accounts. <br> Also, there are no events for ec.AccountServer Accounts (ec-Accounts).
      message:
        $ref: "#/components/messages/ecAPIAccountEvent"
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: ecAPI
          type: topic
          durable: true
          vhost: /
  #/cmd/sendMail/mailgun/{domain}
  #/cmd/sendPush/hector/{appsiteID}
  #appserverBuildEvents
  #appserverBuild
  #ecAuthNotifications
  #dealbunny
  #ec.tasks
  #dsb-eva
  #expopush
  user/signedup/example:
    subscribe:
      message:
        $ref: '#/components/messages/PublicAPIEntryEvent'
    publish:
      bindings:
        amqp:
          expiration: 100000
          userId: guest
          cc: ['user.logs']
          priority: 10
          deliveryMode: 2
          mandatory: false
          bcc: ['external.audit']
          replyTo: user.signedup
          timestamp: true
          ack: false
          bindingVersion: 0.2.0
    bindings:
      amqp:
        is: routingKey
        queue:
          name: my-queue-name
          durable: true
          exclusive: true
          autoDelete: false
          vhost: /
        exchange:
          name: myExchange
          type: topic
          durable: true
          autoDelete: false
          vhost: /
        bindingVersion: 0.2.0
components:
  messages:
    PublicAPIEntryEvent:
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'entryUpdated'
          appId:
            type: string
            description: shortID
          timestamp:
            type: string
            format: datetime
      payload:
        type: object
        properties:
          entryID: 
            type: string
            description: ID of the entry
            pattern: ^[0-9A-Za-z-_]{7,14}$
          modelID: 
            type: string
            format: uuid
            description: ID of the model
          modelTitle: 
            type: string
            description: Title of the model          
          dataManagerID: 
            type: string
            format: uuid
            description: ID of the data manager
          shortID:
            type: string
            pattern: ^[0-9a-f]{8}$
            description: Short ID of the data manager
          data:
            type: object
            description: entry content
            properties:
              "_creator":
                type: string
                format: uuid
                description: ID of the creator
                nullable: true
            additionalProperties: true
          oldEntryData:
            type: object
            description: old entry content, on entryUpdated events
            additionalProperties: true
          entryAndAssetRelations: 
            type: array
            items:
              type: object
          roleRelations: 
            type: array
            items:
              type: object
          uniqueFields: 
            type: array
            items:
              type: object
          user: 
            type: object
            properties:
              accountID: 
                type: string
                format: uuid
              userType: 
                type: string
                enum: 
                - publicUser
                - dmUser
                nullable: true
          modified: 
            type: string
            format: datetime
    PublicAPIAssetEvent:
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'assetUpdated'
          appId:
            type: string
            description: shortID
          timestamp:
            type: string
            format: datetime
      payload:
        type: object
        properties:          
          asset: 
            type: object
            description: full created asset object (only on `assetCreated`).
            properties:
              assetID: 
                type: string
                example: 'fGcaWvdPQhqkmrxvjirsIw'
                description: ID of the asset (encoded UUID)
              assetGroupID:
                type: string
                description: ID of the assetGroup, arbitrary string.
              file:
                type: object
                properties:
                  filename:
                    type: string
                  size:
                    type: number
                  resolution:
                    type: object
                    properties:
                      width: 
                        type: number
                      height:
                        type: number
              duplicates:
                type: number
              dataManagerID:
                type: string
                format: uuid
                description: ID of the data manager
              fileVariants:
                type: array
                description: usually empty array because fileVariants are generated after creation
              isUsed:
                type: boolean
              type: 
                type: string
                description: ec asset type
                enum:
                - image
                - video
                - audio
                - plain
                - document
                - spreadsheet
                - archive
                - other
              title:
                type: string
              mimetype:
                type: string
              creator:
                type: string
                format: uuid
              creatorType:
                type: string
                enum: 
                - publicUser
                - dmUser
                nullable: true
              created:
                type: string
                format: datetime
              thumbnails:
                type: array
              caption:
                type: string
                description: usually empty string, because it cannot be set on creation
              hash:
                type: string                
            additionalProperties: true
          assetID: 
            type: string
            example: 'fGcaWvdPQhqkmrxvjirsIw'
            description: ID of the asset (encoded UUID) (not on `assetCreated`)
          updatedValues:
            type: object
            description: updated values (only on `assetUpdated`)
            additionalProperties: true
          oldValues:
            type: object
            description: old values of updated values (only on `assetUpdated`)
            additionalProperties: true
          accountID: 
            type: string
            format: uuid
          userType: 
            type: string
            enum: 
            - publicUser
            - dmUser
            nullable: true
        required:
          - accountID
          - userType
    PublicAPIUserLoggedInEvent:
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'loggedIn'
          appId:
            type: string
            description: shortID
          timestamp:
            type: string
            format: datetime
      payload:
        type: object
        properties:
          accountID: 
            type: string
            format: uuid
          issued: 
            type: number
          validUntil:
            type: number
    ecAPIDataManagerEvent:
      description: Settings of the created or updated data manager. Note that old values are *not* available on update events.
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'datamanagerCreated'
          appId:
            type: string
            format: uuid
            description: dataManagerID
          timestamp:
            type: string
            format: datetime   
      payload:
        type: object
        properties: 
          dataManagerID:
            type: string
            description: UUID of the Data Manager
            format: uuid
          shortID:
            type: string
            pattern: ^[0-9a-f]{8}$
            description: Short ID of the data manager
          title:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          config:
            type: object
          hexColor:
            type: string
            pattern: ^#[0-9a-f]{6}$
          defaultLocale:
            type: string
            nullable: true
          locales:
            type: array
          publicAssetRights:
            type: array
          customerID:
            nullable: true
          dbhost:
            nullable: true
    ecAPIModelEvent:
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'modelCreated'
          appId:
            type: string
            format: uuid
            description: dataManagerID
          timestamp:
            type: string
            format: datetime   
      payload:
        type: object
        properties: 
          modelID:
            type: string
            description: UUID of the Model
            format: uuid
          title:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          hexColor:
            type: string
            pattern: ^#[0-9a-f]{6}$
          titleField:
            type: string
          fields:
            type: array
            items: 
              type: object
          locales:
            type: array
          hooks:
            type: array
          sync:
            type: array
            nullable: true
          config:
            type: object
          dataManagerID:
            type: string
            description: UUID of the Data Manager
            format: uuid
          shortID:
            type: string
            pattern: ^[0-9a-f]{8}$
            description: Short ID of the data manager
    ecAPIAssetGroupEvent:
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'assetgroupCreated'
          appId:
            type: string
            format: uuid
            description: dataManagerID
          timestamp:
            type: string
            format: datetime   
      payload:
        type: object
        properties: 
          accountID: 
            type: string
            description: accountID of the user who triggered this event
            format: uuid
          assetGroup: 
            type: object
            description: full created assetgroup object (only on `assetgroupCreated` events)
            properties:
              assetGroupID:
                description: The unique ID of the asset group (and also the name)
                type": string
                minLength: 1
                maxLength: 32
                pattern: ^((?!^image$|^video$|^audio$|^plain$|^document$|^spreadsheet$|^archive$)[a-z0-9_-]{1,32})$
              public:
                description: Read-only field indicating if assets in this group are generally public
                type: boolean
              settings:
                type: object
              policies:
                type: array
                items: 
                  type: object 
          updatedValues:
            description: updated values of the assetgroup (only on `assetgroupUpdated` events)
            type: object
            settings:
                type: object
            policies:
              type: array
              items: 
                type: object
          oldValues:
            description: previous values of updated assetgroup values (only on `assetgroupUpdated` events)
            type: object
            settings:
                type: object
            policies:
              type: array
              items: 
                type: object
    ecAPIAccountEvent:
      headers:
        type: object
        properties:
          persistent: 
            type: boolean
            default: true
          contentType:
            type: string
            default: 'application/json'
          messageId: 
            type: string
            format: uuid
          type: 
            type: string
            default: 'accountDeleted'
          appId:
            type: string
            format: uuid
            description: dataManagerID
          timestamp:
            type: string
            format: datetime   
      payload:
        type: object
        properties: 
          accountID: 
            type: string
            description: accountID of the deleted account
            format: uuid
          dataManagerID:
            type: string
            description: UUID of the Data Manager
            format: uuid
          email:
            type: string
            format: email
            nullable: true
          pending:
            type: boolean
          created:
            type: string
            format: datetime
          pendingUpdated:
            type: string
            format: datetime
         